# Generated by Django 3.2.7 on 2021-09-29 08:50

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Listing',
            fields=[
                ('listing_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
                ('starting_price', models.DecimalField(decimal_places=2, default='0', max_digits=12)),
                ('condition', models.CharField(choices=[('Brand new', 'Brand new'), ('Like new', 'Like new'), ('Used', 'Used'), ('Refurbished', 'Refurbished'), ('Remanufactured', 'Remanufactured'), ('For parts', 'For parts')], default='Brand new', max_length=14)),
                ('description', models.CharField(blank=True, max_length=1024, null=True)),
                ('category', models.CharField(choices=[('Books', 'Books'), ('Business & Industrial', 'Business & Industrial'), ('Clothing, Shoes & Accessories', 'Clothing, Shoes & Accessories'), ('Collectibles', 'Collectibles'), ('Consumer Electronics', 'Consumer Electronics'), ('Crafts', 'Crafts'), ('Dolls & Bears', 'Dolls & Bears'), ('Home & Garden', 'Home & Garden'), ('Motors', 'Motors'), ('Pet Supplies', 'Pet Supplies'), ('Sporting Goods', 'Sporting Goods'), ('Sports Mem, Cards & Fan Shop', 'Sports Mem, Cards & Fan Shop'), ('Toys & Hobbies', 'Toys & Hobbies'), ('Antiques', 'Antiques'), ('Computers/Tablets & Networking', 'Computers/Tablets & Networking')], default='Home & Garden', max_length=32)),
                ('zip_code', models.IntegerField(default='00000')),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('is_closed', models.BooleanField(default=False)),
                ('creator_id_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='creatorUserId', to=settings.AUTH_USER_MODEL)),
                ('winner_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='winner', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('image_id', models.AutoField(primary_key=True, serialize=False)),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listed_image', to='auctions.listing')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('comment_id', models.AutoField(primary_key=True, serialize=False)),
                ('comment', models.CharField(max_length=128)),
                ('commenter_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commenter', to=settings.AUTH_USER_MODEL)),
                ('listing_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listed_commentary', to='auctions.listing')),
            ],
        ),
        migrations.CreateModel(
            name='Bid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('highest_bid', models.DecimalField(decimal_places=2, default='0', max_digits=12)),
                ('bidding_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product', to='auctions.listing')),
                ('highest_bidder_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='_Id', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
